version: '2.9'
services:
  webuser:
    build: ./Microservice/UserService
    restart: always
    ports:
      - "5003"
    environment:
      - DB_HOST=mysqluser
      - DB_USER=matteovk
      - DB_PASSWORD=admin
      - DB_DATABASE=users
    depends_on:
      mysqluser:
        condition: service_healthy
    links:
      - 'mysqluser'
    networks:
      - network
      
  mysqluser:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_DATABASE=users
      - MYSQL_USER=matteovk
      - MYSQL_PASSWORD=admin
    volumes:
      - mysqluser:/var/lib/mysql
    ports:
      - "3309:3307"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - network

  nginxuser:
      image: nginx:latest
      volumes:
          - ./Microservice/UserService/nginx.conf:/etc/nginx/nginx.conf:ro
          - ./Microservice/UserService/cert.pem:/etc/nginx/cert.pem
          - ./Microservice/UserService/key.pem:/etc/nginx/key.pem
      depends_on:
          - webuser
      ports:
          - "5003:5003"
      networks:
        - network
   
  webfunds:
    build: ./Microservice/FundsService
    restart: always
    ports:
      - "5002"
    environment:
      - DB_HOST=mysqlfunds
      - DB_USER=matteovk
      - DB_PASSWORD=admin
      - DB_DATABASE=funds
    depends_on:
      mysqlfunds:
        condition: service_healthy
    links:
      - 'mysqlfunds'
    networks:
      - network
      
  mysqlfunds:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_DATABASE=funds
      - MYSQL_USER=matteovk
      - MYSQL_PASSWORD=admin
    volumes:
      - mysqlfunds:/var/lib/mysql
    ports:
      - "3310:3307"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - network

  nginxfunds:
      image: nginx:latest
      volumes:
          - ./Microservice/FundsService/nginx.conf:/etc/nginx/nginx.conf:ro
          - ./Microservice/FundsService/cert.pem:/etc/nginx/cert.pem
          - ./Microservice/FundsService/key.pem:/etc/nginx/key.pem
      depends_on:
          - webfunds
      ports:
          - "5002:5002"
      networks:
        - network
   
  webinvest:
    build: ./Microservice/InvestService
    restart: always
    ports:
      - "5005"
    environment:
      - DB_HOST=mysqlinvest
      - DB_USER=matteovk
      - DB_PASSWORD=admin
      - DB_DATABASE=invest
    depends_on:
      mysqlinvest:
        condition: service_healthy
    links:
      - 'mysqlinvest'
    networks:
      - network
      
  mysqlinvest:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_DATABASE=invest
      - MYSQL_USER=matteovk
      - MYSQL_PASSWORD=admin
    volumes:
      - mysqlinvest:/var/lib/mysql
    ports:
      - "3311:3307"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - network

  nginxinvest:
      image: nginx:latest
      volumes:
          - ./Microservice/InvestService/nginx.conf:/etc/nginx/nginx.conf:ro
          - ./Microservice/InvestService/cert.pem:/etc/nginx/cert.pem
          - ./Microservice/InvestService/key.pem:/etc/nginx/key.pem
      depends_on:
          - webinvest
      ports:
          - "5005:5005"
      networks:
        - network
 
 
  webstock:
    build: ./Microservice/StockService
    restart: always
    ports:
      - "5001"
    environment:
      - DB_HOST=mysqlstock
      - DB_USER=matteovk
      - DB_PASSWORD=admin
      - DB_DATABASE=stocks
    depends_on:
      mysqlstock:
        condition: service_healthy
    links:
      - 'mysqlstock'
    networks:
      - network
      
  mysqlstock:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=test
      - MYSQL_DATABASE=stocks
      - MYSQL_USER=matteovk
      - MYSQL_PASSWORD=admin
    volumes:
      - mysqlstock:/var/lib/mysql
    ports:
      - "3312:3307"
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - network

  nginxstock:
      image: nginx:latest
      volumes:
          - ./Microservice/StockService/nginx.conf:/etc/nginx/nginx.conf:ro
          - ./Microservice/StockService/cert.pem:/etc/nginx/cert.pem
          - ./Microservice/StockService/key.pem:/etc/nginx/key.pem
      depends_on:
          - webstock
      ports:
          - "5001:5001"
      networks:
        - network
  
  webrecommendation:
    build: ./Microservice/RecommendationService
    restart: always
    environment:
      - STOCK_HOST=nginxstock:5001
      - STOCK_INVEST=nginxinvest:5005
    ports:
      - "5006"
    networks:
      - network
      
  nginxrecommendation:
      image: nginx:latest
      volumes:
          - ./Microservice/RecommendationService/nginx.conf:/etc/nginx/nginx.conf:ro
          - ./Microservice/RecommendationService/cert.pem:/etc/nginx/cert.pem
          - ./Microservice/RecommendationService/key.pem:/etc/nginx/key.pem
      depends_on:
          - webrecommendation
      ports:
          - "5006:5006"
      networks:
        - network
      
  background:
    build: ./BackgroundService
    restart: always
    environment:
      - STOCK_HOST=nginxstock:5001
      - STOCK_PROTOCOL=http
      - INVEST_HOST=nginxinvest:5005
      - INVEST_PROTOCOL=http
      - GATEWAY_HOST=nginxgateway:5000
      - GATEWAY_PROTOCOL=https
      - FUNDS_HOST=nginxfunds:5002
      - FUNDS_PROTOCOL=http
    depends_on:
      - nginxstock
    networks:
      - network
      
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - network
        
  userwrapper:
    build: ./Wrappers/UserWrappers
    restart: always
    environment:
      - RABBITMQ_HOST=rabbitmq
      - USER_MICROSERVICE=nginxuser:5003
    depends_on:
      - rabbitmq
      - nginxuser
    networks:
      - network
   
  stockwrapper:
    build: ./Wrappers/StockWrappers
    restart: always
    environment:
      - RABBITMQ_HOST=rabbitmq
      - STOCK_MICROSERVICE=nginxstock:5001
    depends_on:
      - rabbitmq
      - nginxstock
    networks:
      - network

  recommendationwrapper:
    build: ./Wrappers/RecommendationWreapers
    restart: always
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RECOMMENDATION_MICROSERVICE=nginxrecommendation:5006
    depends_on:
      - rabbitmq
      - nginxrecommendation
    networks:
      - network 
      
  investwrapper:
    build: ./Wrappers/InvestWrappers
    restart: always
    environment:
      - RABBITMQ_HOST=rabbitmq
      - INVEST_MICROSERVICE=nginxinvest:5005
    depends_on:
      - rabbitmq
      - nginxinvest
    networks:
      - network
 
  fundswrapper:
    build: ./Wrappers/FundsWrappers
    restart: always
    environment:
      - RABBITMQ_HOST=rabbitmq
      - FUNDS_MICROSERVICE=nginxfunds:5002
    depends_on:
      - rabbitmq
      - nginxfunds
    networks:
      - network
      
  gateway:
    build: ./Gateway
    restart: always
    environment:
      - RABBIT_MQ_FUNDS=rabbitmq
      - RABBIT_MQ_INVEST=rabbitmq
      - RABBIT_MQ_RECOMMENDATION=rabbitmq
      - RABBIT_MQ_STOCKS=rabbitmq
      - RABBIT_MQ_USER=rabbitmq
    ports:
      - "5000"
    networks:
      - network
      
  nginxgateway:
      image: nginx:latest
      volumes:
          - ./Gateway/nginx.conf:/etc/nginx/nginx.conf:ro
          - ./Gateway/cert.pem:/etc/nginx/cert.pem
          - ./Gateway/key.pem:/etc/nginx/key.pem
      depends_on:
          - gateway
      ports:
          - "5000:5000"
      networks:
        - network    
      
networks:
  network:
volumes:
  mysqluser:
  mysqlfunds:
  mysqlinvest:
  mysqlstock: